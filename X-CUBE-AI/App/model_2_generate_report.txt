Neural Network Tools for STM32AI v1.6.0 (STM.ai v7.2.0-RC1)
Created date          : 2022-10-04 12:56:49
Parameters            : generate --name model_2 -m C:/_Blaine/WorkSpace/STM32H723_CubeAI_Multi_Model/AI_Sample_Script/housing.h5 --type keras --compression none --verbosity 1 --workspace C:\Users\BLAINE~2\AppData\Local\Temp\mxAI_workspace96173182633480012536269991580214096 --output C:\Users\blaine moon-adm\.stm32cubemx\network_output --allocate-inputs --allocate-outputs

Exec/report summary (generate)
------------------------------------------------------------------------------------------------------------------------
model file            : C:\_Blaine\WorkSpace\STM32H723_CubeAI_Multi_Model\AI_Sample_Script\housing.h5
type                  : keras
c_name                : model_2
compression           : none
allocator strategy    : ['allocate-inputs', 'allocate-outputs']
workspace dir         : C:\Users\BLAINE~2\AppData\Local\Temp\mxAI_workspace96173182633480012536269991580214096
output dir            : C:\Users\blaine moon-adm\.stm32cubemx\network_output
model_name            : housing
model_hash            : d4267a04614e79f7efcf6cec3a278d61
input 1/1             : 'input_0'
                        13 items, 52 B, ai_float, float, (1,1,1,13), domain:activations/**default**
output 1/1            : 'dense_2_dense'
                        1 items, 4 B, ai_float, float, (1,1,1,1), domain:activations/**default**
params #              : 5,121 items (20.00 KiB)
macc                  : 5,249
weights (ro)          : 20,484 B (20.00 KiB) (1 segment)
activations (rw)      : 512 B (512 B) (1 segment) *
ram (total)           : 512 B (512 B) = 512 + 0 + 0

(*) input/output buffers can be used from the activations buffer

Model name - housing ['input_0'] ['dense_2_dense']
-----------------------------------------------------------------------------------------------------------------------------------------------------------
id   layer (type,original)           oshape          param/size     macc    connected to    |   c_size            c_macc          c_type                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------
0    input_0 (Input, None)           [b:None,c:13]                                          |   +3,584(+100.0%)   +960(+100.0%)   dense_of32/nl_of32[0, 1]
     dense_dense (Dense, Dense)      [b:None,c:64]   896/3,584      896     input_0         |   -3,584(-100.0%)   -896(-100.0%)  
     dense (Nonlinearity, Dense)     [b:None,c:64]                  64      dense_dense     |                     -64(-100.0%)   
-----------------------------------------------------------------------------------------------------------------------------------------------------------
1    dense_1_dense (Dense, Dense)    [b:None,c:64]   4,160/16,640   4,160   dense           |                     +64(+1.5%)      dense_of32/nl_of32[2, 3]
     dense_1 (Nonlinearity, Dense)   [b:None,c:64]                  64      dense_1_dense   |                     -64(-100.0%)   
-----------------------------------------------------------------------------------------------------------------------------------------------------------
2    dense_2_dense (Dense, Dense)    [b:None,c:1]    65/260         65      dense_1         |                                     dense_of32[o][4]        
-----------------------------------------------------------------------------------------------------------------------------------------------------------
model/c-model: macc=5,249/5,249  weights=20,484/20,484  activations=--/512 io=--/0



Generated C-graph summary
------------------------------------------------------------------------------------------------------------------------
model name            : housing
c-name                : model_2
c-node #              : 5
c-array #             : 12
activations size      : 512 (1 segments)
weights size          : 20484 (1 segments)
macc                  : 5249
inputs                : ['input_0_output']
outputs               : ['dense_2_dense_output']

C-Arrays (12)
----------------------------------------------------------------------------------------------------
c_id   name (*_array)          item/size    domain/mem-pool           c-type        fmt     comment
----------------------------------------------------------------------------------------------------
0      input_0_output          13/52        activations/**default**   float         float   /input 
1      dense_dense_output      64/256       activations/**default**   float         float          
2      dense_output            64/256       activations/**default**   float         float          
3      dense_1_dense_output    64/256       activations/**default**   float         float          
4      dense_1_output          64/256       activations/**default**   float         float          
5      dense_2_dense_output    1/4          activations/**default**   float         float   /output
6      dense_dense_weights     832/3328     weights/weights           const float   float          
7      dense_dense_bias        64/256       weights/weights           const float   float          
8      dense_1_dense_weights   4096/16384   weights/weights           const float   float          
9      dense_1_dense_bias      64/256       weights/weights           const float   float          
10     dense_2_dense_weights   64/256       weights/weights           const float   float          
11     dense_2_dense_bias      1/4          weights/weights           const float   float          
----------------------------------------------------------------------------------------------------

C-Layers (5)
-----------------------------------------------------------------------------------------------------
c_id   name (*_layer)   id   layer_type   macc   rom     tensors                    shape (array id)
-----------------------------------------------------------------------------------------------------
0      dense_dense      0    dense        896    3584    I: input_0_output          (1,1,1,13) (0)  
                                                         W: dense_dense_weights     (13,1,1,64) (6) 
                                                         W: dense_dense_bias        (1,1,1,64) (7)  
                                                         O: dense_dense_output      (1,1,1,64) (1)  
-----------------------------------------------------------------------------------------------------
1      dense            0    nl           64     0       I: dense_dense_output      (1,1,1,64) (1)  
                                                         O: dense_output            (1,1,1,64) (2)  
-----------------------------------------------------------------------------------------------------
2      dense_1_dense    1    dense        4160   16640   I: dense_output            (1,1,1,64) (2)  
                                                         W: dense_1_dense_weights   (64,1,1,64) (8) 
                                                         W: dense_1_dense_bias      (1,1,1,64) (9)  
                                                         O: dense_1_dense_output    (1,1,1,64) (3)  
-----------------------------------------------------------------------------------------------------
3      dense_1          1    nl           64     0       I: dense_1_dense_output    (1,1,1,64) (3)  
                                                         O: dense_1_output          (1,1,1,64) (4)  
-----------------------------------------------------------------------------------------------------
4      dense_2_dense    2    dense        65     260     I: dense_1_output          (1,1,1,64) (4)  
                                                         W: dense_2_dense_weights   (64,1,1,1) (10) 
                                                         W: dense_2_dense_bias      (1,1,1,1) (11)  
                                                         O: dense_2_dense_output    (1,1,1,1) (5)   
-----------------------------------------------------------------------------------------------------



Number of operations per c-layer
------------------------------------------------------------------------------------------------
c_id    m_id   name (type)             #op (type)                       #param (sparsity)      
------------------------------------------------------------------------------------------------
0       0      dense_dense (dense)                 896 (smul_f32_f32)              896 (0.0145)
1       0      dense (nl)                           64 (op_f32_f32)                            
2       1      dense_1_dense (dense)             4,160 (smul_f32_f32)            4,160 (0.0029)
3       1      dense_1 (nl)                         64 (op_f32_f32)                            
4       2      dense_2_dense (dense)                65 (smul_f32_f32)               65 (0.0000)
------------------------------------------------------------------------------------------------
total                                            5,249                           5,121 (0.0049)

  Number of operation types
  ---------------------------------------------
  smul_f32_f32               5,121       97.6%
  op_f32_f32                   128        2.4%

Complexity report (model)
----------------------------------------------------------------------------------
m_id   name            c_macc                    c_rom                     c_id  
----------------------------------------------------------------------------------
0      input_0         ||||              18.3%   ||||              17.5%   [0, 1]
1      dense_1_dense   ||||||||||||||||  80.5%   ||||||||||||||||  81.2%   [2, 3]
2      dense_2_dense   |                  1.2%   |                  1.3%   [4]   
----------------------------------------------------------------------------------
macc=5,249 weights=20,484 act=512 ram_io=0

Generated files (7)
------------------------------------------------------------------------------------
C:\Users\blaine moon-adm\.stm32cubemx\network_output\model_2_config.h
C:\Users\blaine moon-adm\.stm32cubemx\network_output\model_2.h
C:\Users\blaine moon-adm\.stm32cubemx\network_output\model_2.c
C:\Users\blaine moon-adm\.stm32cubemx\network_output\model_2_data_params.h
C:\Users\blaine moon-adm\.stm32cubemx\network_output\model_2_data_params.c
C:\Users\blaine moon-adm\.stm32cubemx\network_output\model_2_data.h
C:\Users\blaine moon-adm\.stm32cubemx\network_output\model_2_data.c
